
type Writer {
    bool needsComma
}

def Writer.write(@self, any args :multiple)
    if self.needsComma
        print(',')
        self.needsComma = false
    
    print(args.join(''))

def Writer.dump_function(@self, Branch func)
    self.write('{')
    self.write('"type": "Function",')
    self.write('"name": "' func.name '",')
    self.write('"term": "' func.owner '",')
    heading = func.format_function_heading
    for phrase in @heading
        for item in @phrase
            to_string(@item)
    self.write('"heading": ' heading)

    inputs = for input in func.inputs
        Term(@input)

    self.write('}')
    self.needsComma = true

def Writer.dump_type(@self, Type t)
    self.write('{')
    self.write('"type": "Type",')
    self.write('"name": "' t.name '",')
    self.write('"term": "' t.declaringTerm '"')

    self.write('}')
    self.needsComma = true

print('[')
writer = create(Writer)
items = for t in reflect:kernel().terms
    Term(@t)

    if t.is_function
        writer.dump_function(t.contents)
    elif t.is_type
        writer.dump_type(t.value)

print(']')
