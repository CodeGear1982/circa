

def visit(it, func)
  to_iter(@it)

  while not it.done
    func(it.next)
    @it.advance

struct ConcatenatedIterator {
  any left
  any right
}

def concat(left, right)
  to_iter(@left)
  to_iter(@right)

  if left.done
    right
  else
    ConcatenatedIterator.make(left right)

def ConcatenatedIterator.done(self)
  self.left.done and self.right.done

def ConcatenatedIterator.next(self)
  self.left.next

def ConcatenatedIterator.advance(self)
  nextLeft = self.left.advance

  if nextLeft.done
    self = self.right
  else
    self.left = nextLeft

  self
