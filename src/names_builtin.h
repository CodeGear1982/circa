// Copyright (c) Andrew Fischer. See LICENSE file for license terms.

// This file was generated using name_tool.py

#pragma once

namespace circa {

const int s_addr = 0;
const int s_advance = 1;
const int s_block = 2;
const int s_break = 3;
const int s_case = 4;
const int s_continue = 5;
const int s_conditional_done = 6;
const int s_count = 7;
const int s_current_term = 8;
const int s_declared_state = 9;
const int s_discard = 10;
const int s_done = 11;
const int s_error = 12;
const int s_expr = 13;
const int s_failure = 14;
const int s_file = 15;
const int s_filename = 16;
const int s_format = 17;
const int s_frames = 18;
const int s_has_state = 19;
const int s_ident = 20;
const int s_incoming = 21;
const int s_index = 22;
const int s_inputs = 23;
const int s_invalid = 24;
const int s_iterator = 25;
const int s_iterator_value = 26;
const int s_items = 27;
const int s_key = 28;
const int s_last = 29;
const int s_list = 30;
const int s_liveness_list = 31;
const int s_local_state = 32;
const int s_local_state_key = 33;
const int s_loop = 34;
const int s_maddr = 35;
const int s_major_block = 36;
const int s_maybe = 37;
const int s_message = 38;
const int s_methodCache = 39;
const int s_next = 40;
const int s_next_case = 41;
const int s_no = 42;
const int s_normal = 43;
const int s_none = 44;
const int s_newline = 45;
const int s_out = 46;
const int s_outputSlot = 47;
const int s_outgoing = 48;
const int s_pc = 49;
const int s_produceOutput = 50;
const int s_repeat = 51;
const int s_return = 52;
const int s_slot = 53;
const int s_slots = 54;
const int s_slotCount = 55;
const int s_switch = 56;
const int s_success = 57;
const int s_type = 58;
const int s_term = 59;
const int s_top = 60;
const int s_unknown = 61;
const int s_yes = 62;
const int s_EvaluationEmpty = 63;
const int s_HasEffects = 64;
const int s_HasControlFlow = 65;
const int s_HasDynamicDispatch = 66;
const int s_DirtyStateType = 67;
const int s_Builtins = 68;
const int s_ModuleName = 69;
const int s_StaticErrors = 70;
const int s_IsModule = 71;
const int s_AccumulatingOutput = 72;
const int s_Comment = 73;
const int s_Constructor = 74;
const int s_Error = 75;
const int s_ExplicitState = 76;
const int s_ExplicitType = 77;
const int s_Field = 78;
const int s_FieldAccessor = 79;
const int s_Final = 80;
const int s_Hidden = 81;
const int s_HiddenInput = 82;
const int s_Implicit = 83;
const int s_IgnoreError = 84;
const int s_LocalStateResult = 85;
const int s_Meta = 86;
const int s_Message = 87;
const int s_MethodName = 88;
const int s_ModifyList = 89;
const int s_Multiple = 90;
const int s_Mutability = 91;
const int s_Optional = 92;
const int s_OriginalText = 93;
const int s_OverloadedFunc = 94;
const int s_Ref = 95;
const int s_Rebind = 96;
const int s_Setter = 97;
const int s_State = 98;
const int s_Step = 99;
const int s_Statement = 100;
const int s_Output = 101;
const int s_PreferSpecialize = 102;
const int s_Error_UnknownType = 103;
const int s_Syntax_AnonFunction = 104;
const int s_Syntax_BlockStyle = 105;
const int s_Syntax_Brackets = 106;
const int s_Syntax_ColorFormat = 107;
const int s_Syntax_DeclarationStyle = 108;
const int s_Syntax_ExplicitType = 109;
const int s_Syntax_FunctionName = 110;
const int s_Syntax_IdentifierRebind = 111;
const int s_Syntax_ImplicitName = 112;
const int s_Syntax_Import = 113;
const int s_Syntax_InputFormat = 114;
const int s_Syntax_IntegerFormat = 115;
const int s_Syntax_LineEnding = 116;
const int s_Syntax_LiteralList = 117;
const int s_Syntax_MethodDecl = 118;
const int s_Syntax_Multiline = 119;
const int s_Syntax_NameBinding = 120;
const int s_Syntax_NoBrackets = 121;
const int s_Syntax_NoParens = 122;
const int s_Syntax_Operator = 123;
const int s_Syntax_OriginalFormat = 124;
const int s_Syntax_Parens = 125;
const int s_Syntax_PreWs = 126;
const int s_Syntax_PreDotWs = 127;
const int s_Syntax_PreOperatorWs = 128;
const int s_Syntax_PreEndWs = 129;
const int s_Syntax_PreEqualsSpace = 130;
const int s_Syntax_PreLBracketWs = 131;
const int s_Syntax_PreRBracketWs = 132;
const int s_Syntax_PostEqualsSpace = 133;
const int s_Syntax_PostFunctionWs = 134;
const int s_Syntax_PostKeywordWs = 135;
const int s_Syntax_PostLBracketWs = 136;
const int s_Syntax_PostHeadingWs = 137;
const int s_Syntax_PostNameWs = 138;
const int s_Syntax_PostWs = 139;
const int s_Syntax_PostOperatorWs = 140;
const int s_Syntax_Properties = 141;
const int s_Syntax_QuoteType = 142;
const int s_Syntax_RebindSymbol = 143;
const int s_Syntax_RebindOperator = 144;
const int s_Syntax_RebindingInfix = 145;
const int s_Syntax_ReturnStatement = 146;
const int s_Syntax_Require = 147;
const int s_Syntax_RequireLocal = 148;
const int s_Syntax_StateKeyword = 149;
const int s_Syntax_TypeMagicSymbol = 150;
const int s_Syntax_WhitespaceBeforeEnd = 151;
const int s_Syntax_WhitespacePreColon = 152;
const int s_Syntax_WhitespacePostColon = 153;
const int s_Wildcard = 154;
const int s_RecursiveWildcard = 155;
const int s_Function = 156;
const int s_TypeRelease = 157;
const int s_FileNotFound = 158;
const int s_NotEnoughInputs = 159;
const int s_TooManyInputs = 160;
const int s_ExtraOutputNotFound = 161;
const int s_Default = 162;
const int s_ByDemand = 163;
const int s_Unevaluated = 164;
const int s_InProgress = 165;
const int s_Lazy = 166;
const int s_Consumed = 167;
const int s_Uncaptured = 168;
const int s_Return = 169;
const int s_Continue = 170;
const int s_Break = 171;
const int s_Discard = 172;
const int s_Control = 173;
const int s_ExitLevelFunction = 174;
const int s_ExitLevelLoop = 175;
const int s_HighestExitLevel = 176;
const int s_ExtraReturn = 177;
const int s_Name = 178;
const int s_Primary = 179;
const int s_Anonymous = 180;
const int s_Entropy = 181;
const int s_OnDemand = 182;
const int s_dev_compile = 183;
const int s_hacks = 184;
const int s_no_effect = 185;
const int s_no_save_state = 186;
const int s_effect = 187;
const int s_set_value = 188;
const int s_watch = 189;
const int s_Copy = 190;
const int s_Move = 191;
const int s_Unobservable = 192;
const int s_TermCounter = 193;
const int s_Watch = 194;
const int s_StackReady = 195;
const int s_StackRunning = 196;
const int s_StackFinished = 197;
const int s_InfixOperator = 198;
const int s_FunctionName = 199;
const int s_TypeName = 200;
const int s_TermName = 201;
const int s_Keyword = 202;
const int s_Whitespace = 203;
const int s_UnknownIdentifier = 204;
const int s_LookupAny = 205;
const int s_LookupType = 206;
const int s_LookupFunction = 207;
const int s_Untyped = 208;
const int s_UniformListType = 209;
const int s_AnonStructType = 210;
const int s_StructType = 211;
const int s_NativePatch = 212;
const int s_RecompileModule = 213;
const int s_Filesystem = 214;
const int s_Tarball = 215;
const int s_Bootstrapping = 216;
const int s_Done = 217;
const int s_StorageTypeNull = 218;
const int s_StorageTypeInt = 219;
const int s_StorageTypeFloat = 220;
const int s_StorageTypeBlob = 221;
const int s_StorageTypeBool = 222;
const int s_StorageTypeStack = 223;
const int s_StorageTypeString = 224;
const int s_StorageTypeList = 225;
const int s_StorageTypeOpaquePointer = 226;
const int s_StorageTypeTerm = 227;
const int s_StorageTypeType = 228;
const int s_StorageTypeHandle = 229;
const int s_StorageTypeHashtable = 230;
const int s_StorageTypeObject = 231;
const int s_InterfaceType = 232;
const int s_Delete = 233;
const int s_Insert = 234;
const int s_Element = 235;
const int s_Key = 236;
const int s_Replace = 237;
const int s_Append = 238;
const int s_Truncate = 239;
const int s_ChangeAppend = 240;
const int s_ChangeRename = 241;
const int tok_Identifier = 242;
const int tok_ColonString = 243;
const int tok_Integer = 244;
const int tok_HexInteger = 245;
const int tok_Float = 246;
const int tok_String = 247;
const int tok_Color = 248;
const int tok_Bool = 249;
const int tok_LParen = 250;
const int tok_RParen = 251;
const int tok_LBrace = 252;
const int tok_RBrace = 253;
const int tok_LSquare = 254;
const int tok_RSquare = 255;
const int tok_Comma = 256;
const int tok_At = 257;
const int tok_Dot = 258;
const int tok_DotAt = 259;
const int tok_Star = 260;
const int tok_DoubleStar = 261;
const int tok_Question = 262;
const int tok_Slash = 263;
const int tok_DoubleSlash = 264;
const int tok_Plus = 265;
const int tok_Minus = 266;
const int tok_LThan = 267;
const int tok_LThanEq = 268;
const int tok_GThan = 269;
const int tok_GThanEq = 270;
const int tok_Percent = 271;
const int tok_Colon = 272;
const int tok_DoubleColon = 273;
const int tok_DoubleEquals = 274;
const int tok_NotEquals = 275;
const int tok_Equals = 276;
const int tok_PlusEquals = 277;
const int tok_MinusEquals = 278;
const int tok_StarEquals = 279;
const int tok_SlashEquals = 280;
const int tok_ColonEquals = 281;
const int tok_RightArrow = 282;
const int tok_FatArrow = 283;
const int tok_LeftArrow = 284;
const int tok_Ampersand = 285;
const int tok_DoubleAmpersand = 286;
const int tok_VerticalBar = 287;
const int tok_DoubleVerticalBar = 288;
const int tok_Semicolon = 289;
const int tok_TwoDots = 290;
const int tok_Ellipsis = 291;
const int tok_TripleLThan = 292;
const int tok_TripleGThan = 293;
const int tok_Pound = 294;
const int tok_Def = 295;
const int tok_Struct = 296;
const int tok_UnusedName1 = 297;
const int tok_UnusedName2 = 298;
const int tok_UnusedName3 = 299;
const int tok_If = 300;
const int tok_Else = 301;
const int tok_Elif = 302;
const int tok_For = 303;
const int tok_While = 304;
const int tok_State = 305;
const int tok_Return = 306;
const int tok_In = 307;
const int tok_Let = 308;
const int tok_True = 309;
const int tok_False = 310;
const int tok_Namespace = 311;
const int tok_Include = 312;
const int tok_And = 313;
const int tok_Or = 314;
const int tok_Not = 315;
const int tok_Discard = 316;
const int tok_Null = 317;
const int tok_Break = 318;
const int tok_Continue = 319;
const int tok_Switch = 320;
const int tok_Case = 321;
const int tok_Require = 322;
const int tok_RequireLocal = 323;
const int tok_Import = 324;
const int tok_Package = 325;
const int tok_Section = 326;
const int tok_Whitespace = 327;
const int tok_Newline = 328;
const int tok_Comment = 329;
const int tok_Eof = 330;
const int tok_Unrecognized = 331;
const int s_NormalCall = 332;
const int s_FuncApply = 333;
const int s_FuncCall = 334;
const int s_FirstStatIndex = 335;
const int stat_TermCreated = 336;
const int stat_TermPropAdded = 337;
const int stat_TermPropAccess = 338;
const int stat_NameSearch = 339;
const int stat_NameSearchStep = 340;
const int stat_FindModule = 341;
const int stat_Bytecode_WriteTerm = 342;
const int stat_Bytecode_CreateEntry = 343;
const int stat_LoadFrameState = 344;
const int stat_StoreFrameState = 345;
const int stat_AppendMove = 346;
const int stat_GetIndexCopy = 347;
const int stat_GetIndexMove = 348;
const int stat_Interpreter_Step = 349;
const int stat_Interpreter_DynamicMethod_CacheHit = 350;
const int stat_Interpreter_DynamicMethod_SlowLookup = 351;
const int stat_Interpreter_DynamicMethod_SlowLookup_Module = 352;
const int stat_Interpreter_DynamicMethod_SlowLookup_Hashtable = 353;
const int stat_Interpreter_DynamicMethod_ModuleLookup = 354;
const int stat_Interpreter_DynamicFuncToClosureCall = 355;
const int stat_Interpreter_CopyTermValue = 356;
const int stat_Interpreter_CopyStackValue = 357;
const int stat_Interpreter_MoveStackValue = 358;
const int stat_Interpreter_CopyConst = 359;
const int stat_FindEnvValue = 360;
const int stat_Make = 361;
const int stat_Copy = 362;
const int stat_Cast = 363;
const int stat_ValueCastDispatched = 364;
const int stat_Touch = 365;
const int stat_BlobDuplicate = 366;
const int stat_ListsCreated = 367;
const int stat_ListsGrown = 368;
const int stat_ListSoftCopy = 369;
const int stat_ListDuplicate = 370;
const int stat_ListDuplicate_100Count = 371;
const int stat_ListDuplicate_ElementCopy = 372;
const int stat_ListCast_Touch = 373;
const int stat_ListCast_CastElement = 374;
const int stat_HashtableDuplicate = 375;
const int stat_HashtableDuplicate_Copy = 376;
const int stat_StringCreate = 377;
const int stat_StringDuplicate = 378;
const int stat_StringResizeInPlace = 379;
const int stat_StringResizeCreate = 380;
const int stat_StringSoftCopy = 381;
const int stat_StringToStd = 382;
const int stat_DynamicCall = 383;
const int stat_FinishDynamicCall = 384;
const int stat_DynamicMethodCall = 385;
const int stat_SetIndex = 386;
const int stat_SetField = 387;
const int stat_SetWithSelector_Touch_List = 388;
const int stat_SetWithSelector_Touch_Hashtable = 389;
const int stat_StackPushFrame = 390;
const int s_LastStatIndex = 391;
const int s_LastBuiltinName = 392;

const char* builtin_symbol_to_string(int name);
int builtin_symbol_from_string(const char* str);

} // namespace circa
