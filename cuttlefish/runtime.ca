
type Point { float x, float y }
type Box { float x1, float y1, float x2, float y2 }

-- Wrap up mouse position into a point (values are passed in from input.cpp)
mouse = [_mouse_x _mouse_y] : Point

def mouse_in(Box b) : bool
  return (b.x1 < mouse.x) && (b.x2 > mouse.x) && (b.y1 < mouse.y) && (b.y2 > mouse.y)
end

-- p2c: polar to cartesian
def p2c(float angle, float radius, Point center) : Point
  return [cos(angle) * radius + center.x, sin(angle) * radius + center.y]
end

def draw_box(Box box, int color)
    nw = [box.x1 box.y1]
    ne = [box.x2 box.y1]
    sw = [box.x1 box.y2]
    se = [box.x2 box.y2]
    gl.triangles([nw ne se se sw nw] color)
end

ui_font_medium = load_font("assets/sv_basic_manual/SVBasicManual.ttf", 16)

-- in main.cpp, we load the user's script into this branch:
users_branch = branch()

