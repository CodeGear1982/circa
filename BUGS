
Recent
  Delete create_type (use create_type_value instead)

  Move output casting to a different spot. Currently it happens twice - once when a value
    is copied by output_placeholder (this is the correct spot), and again in finish_frame.
    It shouldn't happen in finish_frame, instead we should do the check after FireNative completes.
   
  For-loop index would be pretty nice

  Improv needs clipping rects

  Type inferrence fail in extra_output from if-block

  This code had an error with no source location:
    letterSize = [painter.currentFont.width('AAAAAAAAAA') / 10, painter.currentFont.height] -> Point
  (where width & height both returned null)

Deprecated code to delete
  FileOrigin on branch (and the code that reloads based on file origins)
  Unique names (replaced with global names and uniqueOrdinal)
  
Source repro
  Each branch should store the base indent level (instead of having this data in Term)

Code reload
  Bug fix, don't reload if the file has just been written and its size is 0. Maybe have a delay.

Code cleanup
  Remove importing_macros.h
  Deprecate API using Term* or Function* to reference functions (prefer Branch*)
  Eliminate C++ Function type, in favor of Branch.

Runtime reflection
  Functions have type Function, we should get rid of that and just use Branch everywhere

State
  Inlined state doesn't work in a recursive function

Modules
  When compiling a module, the last value is automatically turned into an output (just
    like a function). This should probably be explicit for modules.

Code modification
  Code modification should go through a more controlled path.
    Add a CodeModification class that stores a modification in progress
    Add a global apply_modification() function that invokes it.
    Alternately, require that modifications must be passed through message-send
      One goal is that modifications should be able to be sent remotely

Big Features
  Proper module system
  Possibly get rid of separate 'int' type, and just use numbers. Replace with some other
    system that can detect when an expression will always be an integer.
