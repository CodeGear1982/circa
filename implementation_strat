
I hit a road block. The problem is this:

1) I want to have a Circa file that has (not yet defined) functions, and some feedback terms that use those functions.
2) Then I want to define some functions later
3) But, feedback terms do all their magic in initialize(), so adding terms later is too late.

Here's how I think this should work:
1) Something (whatever) happens on initialize
2) Later we assign values to some functions
3) This assignment triggers a reevaluation. Feedback terms get reevaluated.

Here's how feedback terms work:
1) The magic happens in evaluate()
2) Feedback functions can create terms. If they do, there is some mechanism where they will remember their owner.
3) If the feedback term gets reevaluated, it may destroy (and replace) the terms that were created.

In order to do (2) well, I think I have to implement functions.

Also I will need to add some system that intelligently handles cascading reevaluation.
