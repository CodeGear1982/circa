
Step-by-step of click and drag feedback:

Before running the user script:
  Capture a pre-run copy
    (TODO: fix VM duplication)
  Code browsing UI tells us the target term

Change improv
  (DONE) Use vm.set_context(Map.make) followed by vm.set_context_val calls.

Run user script
  (TODO) User script includes calls to a guide() function
  (TODO) Guide function has click-and-drag support
  (TODO) On a drag event, capture the current stack path and the current value,
    and save this on the VM itself. Needs design.
  (TODO) Apply pending ChangeEvents to VM
    This will probably also use :vmUseDemandValue

After:
  Use the pre-run vm for a find-derivative run
  Set :vmNoSaveState and :vmNoEffects (DONE)
  For the target term
    (Supported) Set a :vmUseDemandValue flag, indicating that the term's demand value
    should be used instead of the fixed value.
    (Supported) Manually set the demand value, to equal the term's value + 0.0000001
      Make sure we are using the term's value with change-events applied

  For the desired-value term
    (TODO) Install a :vm spy, which will save the term's observed value when it
      matches the given stack path.

  Run the find-derivative vm

  Extract the observed value for the desired-value stack path.

  Use math and shit to determine a new value for the target term
    TargetDerivativeWithRespectToDesired = (modifiedDesiredValue - originalDesiredValue) 0.0000001
    RecommendedTargetValue = desiredDelta * TargetDerivativeWithRespectToDesired

  Construct a ChangeEvent with this new value (TODO)

  Save the ChangeEvent for later (next run of userScript will use it) (TODO)
