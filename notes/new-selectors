
Introducing the concept of a 'selector'

This is a first-class value, representing what I have been calling an 'lexpr'.
It indicates a subelement within a complex data type.

Say we have

 L = [[[1]]]

We can assign an element to L using three layers of the set-index syntax

 L[0][0][0] = 2

The part after L becomes a 'selector'

 sel = selector(0, 0, 0)

And the assignment step looks like this
 
 L = set_with_selector(L, sel, 2)

--

Methods

Right now this:

 a.b

Is parsed as a method-call (where 'b' is the method)

Which is fine

However if we want this

 a.b = 3

The method-call must be removed and replaced with a selector ['b']

It can get complicated, such as

 a.b[1].c.d[1].e = x
