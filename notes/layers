
High-level overview of what is happening:

## Layer A ##

Executable dataflow graph
Can be compiled into LLVM and then run with no help from the host

## Layer B ##

Operations that read/modify the dataflow graph.

In certain instances, this must happen at run-time.  We must provide built-ins
so that these operations are possible from code. We also want to discourage
these operations, as they require some sort of re-compilation to occur.

Do what we can to:
a) reduce how often this must happen
b) minimize how much recalculation must be done when one of these changes occur.

## Layer C ##

Wholesale reading/modification of code. Here there is no restriction on the scope of
the changes we are allowed to perform.


* Specific operations *

- Layer A -

Execution
New function call? (requires an allocation and a pointer reassignment)

- Layer B -

Append new term
Function definition / override

