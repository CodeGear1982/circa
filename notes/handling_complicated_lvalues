
# Postprocess method #
The first pass would process [= += *=] as infix operators. 2nd pass would convert them
into assignment forms.

a.x = 1

First pass: assign(get_field(a, 'x'), 1)
Second pass: set_field(a, 'x', 1)

a.x.y = 1
First pass: assign(get_field(a, 'x', 'y'), 1)
Second pass: set_field(a, 'x', 'y', 1)

a.x.y += 1
First pass: plus_assign(get_field(a, 'x', 'y'), 1)
Second pass: set_field(a, 'x', 'y', get_field(a 'x' 'y') + 1)

a[0].y = 3
First pass: assign(get_field(get_index(a, 0), 'y'), 3)
Second pass: set_index(a, set_field(get_index(a, 0), 'y', 3), 0)

# Alternate idea: name selectors #

def assign(any original, NameSelector sel, any new_value)

a[0].y = 3
assign(a, [0, 'y'], 3)


