
Want to refactor the API by which native functions are imported and made available.

Goals:

 1) Separation of the code and stack-data. Stacks should be separate entities, but it should
    still be simple for a function to access a value on the stack.
 2) Pass a single EvaluationContext object, to make it easier to add/remove things in the future.
 3) Use C macros to make it really easy to define an imported native function.

Optional goals:
 4) Make it easier to call a hosted function without creating a bunch of throwaway terms.
