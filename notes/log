4/4/2014
    Crash caused by initialize()
    The initializer was calling set_native_ptr
    But initialize() sets value_type before calling type.initialize
    And set_native_ptr was triggering set_null which tried to release the value,
    which crashed because value_data was unset.

    initialize() sucks. Should be set_default() or something, and it shouldn't
      change value_type for you.

4/2/2014

  Considering adding a ValueModificationIterator
    The idea would be, if a piece of code wants to *conditionally* modify a nested
    value, it could trigger iterator.touch(). This would recursively touch() every
    owning value.

    Currently, code of this kind must either touch() on every call, or do its own
    pre-check.

    First user would be migrate_value.

    But, the way some builtin data structures work (like Stacks), this would not
    work so great. One Stack can have several nested values.

    A refactor we could consider: make sure *all* values are lists/maps if they
    have nested elements. The native Stack type would not have any nested values.
