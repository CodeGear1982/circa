
Enums!

We definitely need enums, and switch statements.

# Syntax #

I think it would be good to use the :symbol syntax for enum values, this would make
them more dynamic. This way a piece of code can use an unknown enum without
seeing the definition.

  result = :hide
  switch(result)
    case :show { ... }
    case :hide { ... }

Explicit declaration:

  enum whatever = [:show :hide :ignore]
  enum whatever = [show hide ignore]

Reuse the 'type' keyword instead of 'enum':
  type whatever = [:show :hide]
  type whatever = [show hide]

# Lazy enums #

In some cases we could lazily create an enum type, based on the results

def myfunc() -> type LazyEnum
  if x == 0
    return :show
  else
    return :hide

After code analysis, the LazyEnum type would be equal to
    enum [:show :hide]
