
In dataflow languages, it's common to think of a function which is a little
black box that takes input and spits out an output. And in the middle, there
is any amount of bookkeeping.

However in the current system, this is hard. The code is set up so that there
is no difference between a term's internal value, and its output. All terms
are transparent this way.

This problem keeps coming up, and it would be great to have a term be able to do
this:


some_term =
{
  ...
  (bookkeeping)
  #out = output()
}

Then when another term uses 'some_term', it should actually access the value that
is inside '#out'.

---

Final thoughts:

This problem does keep coming up but I don't want to solve it. Having a separation
between a term's outputs and contents is going to make lots of things more
complicated. I think we can live without this fix, so far there have been various
workarounds and we'll just keep finding workarounds.
