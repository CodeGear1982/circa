
Native Modules (v2)

Outline
  This document talks about the native module system for the Circa runtime. This system
  is responsible for loading a native shared library (a .dll or .so file), and making
  its functions available to the runtime.

Basics
  The task of the native module loader is to:
    1) Load native shared objects (DLL or SO files)
    2) Find and load special C functions from those objects
         Each of these C functions has EvalFunction signature (it takes a single Stack* argument)
    3) Patch the Circa runtime data with the loaded C functions, so that running those scripts
       will invoke the native code.

  Typically a native module will come in two parts:
    1) The DLL/SO file
    2) A .ca file declaring all the functions that are available. (this script provides important
       type information to Circa). This .ca file might also have helper functions that are not
       native. Also it will probably define new types. (TODO: How are types native patched?)
    Optional 3) A makefile. With this, the runtime can auto rebuild and reload the DLL/SO file.

Requirements
  Order shouldn't matter. We should be able to load the Circa code first, or the native module
    first, with no change in behavior.
  Circa code can be reloaded freely, without losing native patch information.
  A native DLL can be statically inspected, to learn about what it provides.
  Native module can be created without a DLL (for easier testing).
  Native module can be reloaded freely. We should support a way to instantly reload the
    native module when it is recompiled.

Design/Implementation outline
  New code goes into src/native_modules.cpp
  New C++ class NativeModule
    Contains all the data for one native module. May be created from a DLL/SO, or may be created
    manually.
  New C++ class NativeModuleWorld
    All the world-specific data around native modules, including a list of active modules.
    This is kept in a separate class than World for encapsulation.
  Each NativeModule has a map of name -> native patch function


