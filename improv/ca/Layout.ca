
type Element {
    int parent
    List contents
    Name strategy
    Map props
    any data
}

type Layout {
    List elements
}

def start() -> Layout
    make(Layout)

def Element.setStrategy(@self, Name strategy)

def Map.listMissing(self, List list) -> List
    output = []
    for i in list
        if not self.contains(i)
            output.append(i)
    output

-- Returns a list of [Rect, any] pairs.
def Layout.getRects(self) -> List
    positions = empty_list(self.elements.length)

    -- Position of root should be provided.
    root = self.elements[0]
    missingProps = root.props.listMissing(['x' 'y' 'width' 'height'])
    positions[0] = 


    for Element e in self.elements

