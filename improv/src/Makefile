# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug)
  OBJDIR     = ../build/obj/Debug
  TARGETDIR  = ../build/improv_d.app/Contents/MacOS
  TARGET     = $(TARGETDIR)/improv_d
  DEFINES   += -DDEBUG
  INCLUDES  += -I../include -I.. -I../../include -I../libs -I/usr/X11/include -I/usr/X11/include/freetype2 -I/usr/local/Cellar/cairo/1.12.2/include/cairo -I/usr/local/Cellar/qt/4.8.2/include -I/usr/local/Cellar/qt/4.8.2/Frameworks/QtCore.framework/Headers -I/usr/local/Cellar/qt/4.8.2/Frameworks/QtGui.framework/Headers -I/usr/local/Cellar/qt/4.8.2/Frameworks/QtOpenGL.framework/Headers
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g `pkg-config --cflags pango`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += `pkg-config --libs pango` -F/usr/local/Cellar/qt/4.8.2/lib/ -L/usr/X11/lib -L/usr/local/Cellar/cairo/1.12.2/lib -L../../build
  LIBS      += -lfreetype -lcairo -lpangocairo-1.0.0 -framework QtCore -framework QtGui -framework QtOpenGL -framework OpenGL -framework AGL -lcirca_d
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = ../build/obj/Release
  TARGETDIR  = ../build/improv.app/Contents/MacOS
  TARGET     = $(TARGETDIR)/improv
  DEFINES   += 
  INCLUDES  += -I../include -I.. -I../../include -I../libs -I/usr/X11/include -I/usr/X11/include/freetype2 -I/usr/local/Cellar/cairo/1.12.2/include/cairo -I/usr/local/Cellar/qt/4.8.2/include -I/usr/local/Cellar/qt/4.8.2/Frameworks/QtCore.framework/Headers -I/usr/local/Cellar/qt/4.8.2/Frameworks/QtGui.framework/Headers -I/usr/local/Cellar/qt/4.8.2/Frameworks/QtOpenGL.framework/Headers
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -O3 `pkg-config --cflags pango`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += `pkg-config --libs pango` -F/usr/local/Cellar/qt/4.8.2/lib/ -L/usr/X11/lib -L/usr/local/Cellar/cairo/1.12.2/lib -L../../build
  LIBS      += -lfreetype -lcairo -lpangocairo-1.0.0 -framework QtCore -framework QtGui -framework QtOpenGL -framework OpenGL -framework AGL -lcirca
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/CircaBindings.o \
	$(OBJDIR)/Common.o \
	$(OBJDIR)/FontBitmap.o \
	$(OBJDIR)/GLWidget.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/RenderTarget.o \
	$(OBJDIR)/ResourceManager.o \
	$(OBJDIR)/Scripts.o \
	$(OBJDIR)/ShaderUtils.o \
	$(OBJDIR)/TextTexture.o \
	$(OBJDIR)/Texture.o \
	$(OBJDIR)/triangulate.o \
	$(OBJDIR)/Window.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET) $(dir $(TARGETDIR))PkgInfo $(dir $(TARGETDIR))Info.plist
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking Improv
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

$(dir $(TARGETDIR))PkgInfo:
$(dir $(TARGETDIR))Info.plist:

clean:
	@echo Cleaning Improv
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/CircaBindings.o: CircaBindings.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Common.o: Common.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/FontBitmap.o: FontBitmap.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/GLWidget.o: GLWidget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/main.o: main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/RenderTarget.o: RenderTarget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ResourceManager.o: ResourceManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Scripts.o: Scripts.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ShaderUtils.o: ShaderUtils.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TextTexture.o: TextTexture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Texture.o: Texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/triangulate.o: triangulate.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Window.o: Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
