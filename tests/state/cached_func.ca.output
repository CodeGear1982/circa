Should reevaluate:
calling main with: 1, cacheKey: 0
  (reevaluate) Calling add on: 1, 2
  result = 3
Should use cache:
calling main with: 1, cacheKey: 0
  result = 3
Should reevaluate:
calling main with: 1, cacheKey: 1
  (reevaluate) Calling add on: 1, 2
  result = 3
Should use cache:
calling main with: 1, cacheKey: 1
  result = 3
Should reevaluate:
calling main with: 2, cacheKey: 1
  (reevaluate) Calling add on: 2, 2
  result = 4
Should reevaluate:
calling main with: 2, cacheKey: 0
  (reevaluate) Calling add on: 2, 2
  result = 4
Should use cache:
calling main with: 2, cacheKey: 0
  result = 4
Should reevaluate:
calling main with: 2, cacheKey: x
  (reevaluate) Calling add on: 2, 2
  result = 4
Should reevaluate:
calling main with: 2, cacheKey: y
  (reevaluate) Calling add on: 2, 2
  result = 4
Should reevaluate:
calling main with: 3, cacheKey: 0
  (reevaluate) Calling add on: 3, 2
  result = 5
Should reevaluate:
calling main with: 4, cacheKey: 0
  (reevaluate) Calling add on: 4, 2
  result = 6
