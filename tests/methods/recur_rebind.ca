
type T {
    int calls
}

def T.f(@self, int i) -> int
  print('T.f called with: ' self ', ' i)
  self.calls += 1
  if i <= 0
      return 0

  s = self.f(i - 1)
  print('result from recursive call: ' s)
  
  result = 1 + s * 2
  print('returning: ' result)

  return result

t = make(T)
assert(t.calls == 0)

print('top level call: t.f(1)')
assert(t.f(1) == 1)
assert(t.calls == 2)

t = make(T)
print('top level call: t.f(2)')
assert(t.f(2) == 3)
assert(t.calls == 3)

t = make(T)
print('top level call: t.f(3)')
assert(t.f(3) == 7)
assert(t.calls == 4)

t = make(T)
print('top level call: t.f(4)')
assert(t.f(4) == 15)
assert(t.calls == 5)
