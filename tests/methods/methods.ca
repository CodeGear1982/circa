
-- Test a method that modifies the object contents
struct Object
{
    int a
}

def Object.f(self) -> Object
    self.a = 5

o = Object.make(3)
assert(o.a == 3)
@o.f()
assert(o.a == 5)

-- Same test, but with a nested object
struct Object2
{
    List list
}

def Object2.f(self)
    @self.list.append(5)

o = make(Object2)
assert(o.list == [])
@o.f()
assert(o.list == [5])
@o.f()
assert(o.list == [5 5])
@o.f()
assert(o.list == [5 5 5])

-- Multiple levels of nesting
struct T1 { List list }
struct T2 { T1 t }
struct T3 { T2 t }
struct T4 { T3 t }

t = make(T4)
assert(to_string(t) == "{t: {t: {t: {list: []}}}}")
assert(t.t.t.t.list == [])
@t.t.t.t.list.append(10)
assert(t.t.t.t.list == [10])
assert(to_string(t) == "{t: {t: {t: {list: [10]}}}}")
