-- Normal call
concat('a', 'b')
   concat('a', 'b')
b = concat('a', 'b')
  b = concat('a', 'b')
assert(true)
list(1.0, 2.0)
list(1, 2)
list(1,2)
list(1 2)
list(1 2
)
list(1 2 3 4)
list(   1   2,3 4  )
  add(1,2)
add(1,2)  
d = add(1.0, 2.0)
  d = add(1.0, 2.0)
  d   =   add(1 2)
d= add(1 2)
d=add(1 2)
d=   add(1 2)

-- Infix
1.0 + 2.0
1.0 * 2.0
1.0 / 2.0
1.0 - 2.0
blah = 1.0 + 2.0
coersion = 1 + 2
complex = 1 + 2 + 3.0 + 4.0
   5 + 4
5    + 4
5 +    4
5 + 4   
5+4
complex = (4.0 + 3.0) + 2.0

-- Unary
a = 1; -a
a = 1.0; -a

-- Methods
'string'.length()
make(Map).set(1,2)
make(Map).set(1, 2)
make(Vec2).x = 1.0

-- Rebinding
a = 1
a += 1
a *= 5*3+1
  a -= 5*3+1
a /= 5*3+1  

a = Vec2.make(0 0)
a.x += 1
a.x   += 1
a.x +=   1

p = make(Vec2); p.x += 1.0
p = make(Vec2); p.x   += 1.0
p = make(Vec2); p.x +=   1.0
p = make(Vec2); p.x = 1.0
p = make(Vec2); p.x   = 1.0
p = make(Vec2); p.x =   1.0

-- More methods
l = []; l.append(1)

t = make(Vec2); t.x
t = make(Vec2); t.x = 1.0
t = make(Vec2); a = t.x
struct A{int z} struct B{A y} x = make(B); x.y.z

-- Index access
a = [1]; a[0]
a = [1]; b = a[0]
