
struct Fib {
  int a
  int b
}

def Fib.current(self)
  self.a + self.b

def Fib.advance(@self)
  b = self.current
  self.a = self.b
  self.b = b

def Fib.done(self) false
def Fib.key(self) nil

def start_fib()
  concat_seq([1 2] Fib.make(1 2))

fib = take_until(start_fib(), (n) -> n > 4000000)

filter(fib, (n) -> n%2 == 0) | sum | print
