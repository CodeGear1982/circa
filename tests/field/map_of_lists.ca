
struct MapOfLists {
    Table table
}

def MapOfLists.add(@self, any key, any val)
    if self.table.contains(key)
        @self.table.apply(key, (list) -> list.append(val) )
    else
        @self.table.set(key, [val])

def MapOfLists.remove(@self, any key)
    @self.table.remove(key)

def MapOfLists.get(self, any key)
    self.table.get_opt(key, [])

m = make(MapOfLists)
@m.add(:a 1)
@m.add(:b 2)
@m.add(:b 3)
@m.add(:b 4)

assert(m.get(:a) == [1])
assert(m.get(:b) == [2, 3, 4])
assert(m.get(:c) == [])

@m.remove(:b)
assert(m.get(:a) == [1])
assert(m.get(:b) == [])
