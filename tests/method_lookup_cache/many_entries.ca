
struct A {}

def A.f(self)
  print('called A.f')

struct B {}

def B.f(self)
  print('called B.f')

struct C {}

def C.f(self)
  print('called C.f')

struct D {}

def D.f(self)
  print('called D.f')

struct E {}

def E.f(self)
  print('called E.f')

struct F {}

def F.f(self)
  print('called F.f')

struct G {}

def G.f(self)
  print('called G.f')

def main(int i)
  val = [A B C D E F G].cycle(i).make
  any.cast(@val)
  val.f

stack = make_stack(main)

for i in 0..20
  stack.call(i)

  --stack.dump_with_bytecode
