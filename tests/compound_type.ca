
type Vector { number x, number y }

type MyClass {
  int a,
  int b,
  string name,
  number distance
}

type Composite {
  MyClass myClass,
  MyClass myClass2,
  string name,
}

m = MyClass()
m.name = "Andy"
m.a = 1
m.b = m.a + 2
assert(m.name == "Andy")
assert(m.a == 1)
assert(m.b == 3)
assert(to_string(m) == "[1, 3, 'Andy', 0.0]")

-- test += on a field
m.a += 5
assert(m.a == 6)

-- composite type
c = Composite()
assert(to_string(c) == "[[0, 0, '', 0.0], [0, 0, '', 0.0], '']")

v = Vector()

v.x = 5.0
v.y = 6.0

assert(to_string(v) == '[5.0, 6.0]')
assert(v.x == 5.0)
assert(v.y == 6.0)
