
package cairo

native_patch_this('cairo' -> rpath)

type Context;
type Surface;
type FontFace;

type TextExtents { Point bearing; Point size; Point advance }

namespace Operator { clear = 0, source = 1, over = 2 }

-- Contexts
def Surface.make_context(self) -> Context

def Context.save(self)
def Context.restore(self)
def Context.stroke(self)
def Context.paint(self)
def Context.clip(self)
def Context.clip_preserve(self)
def Context.reset_clip(self)
def Context.set_source_color(self, Color color)
def Context.fill_preserve(self)
def Context.set_operator(self, Name operator)

-- Surfaces
def make_image_surface(Point size) -> Surface
def Surface.write_to_png(self, String filename)

-- Text
def Context.select_font_face(self, String family)
def Context.set_font_size(self, number size)
def Context.set_font_face(self, FontFace font)
def Context.show_text(self, String s)
def Context.text_extents(self, String s) -> TextExtents

-- Paths
def Context.curve_to(self, Point control1, Point control2, Point p3)
def Context.move_to(self, Point p)
def Context.rectangle(self, Rect r)
def Context.line_to(self, Point p)
def Context.arc(self, Point center, number radius, number angle1, number angle2)
def Context.new_sub_path(self)
def Context.close_path(self)
def Context.set_line_width(self, number width)
