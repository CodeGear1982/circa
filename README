The goal of this project is to create a programming environment that is fun and efficient,
where you can directly see and interact with the code you are editing.

There are two sub projects: Circa, a programming language; and Plastic, a cross-platform
graphical tool for creating Circa code.

Some features of Circa are:

 - Live coding. The user can examine and modify code while it is running.
 - Visual programming is supported. There is a rich interface for writing tools which
   examine or modify Circa code.
 - Code is primarily saved as text, using syntax that is similar to other modern
   programming languages.
 - Editing text files at runtime is supported. The current state of the program is
   preserved across a text file reload (as much as possible).
 - Non-goal: Circa is not a general-purpose language; there are some styles of programming
   which Circa would be very bad at.

Some implementation details:

 - Static structural typing with some type inference
 - Dataflow-based
 - Implemented in C++
 - Interpreted execution; the plan is to eventually use LLVM for JIT
 - Plastic uses SDL and OpenGL for graphics
 - Currently supported on XP and OSX. A Linux port would probably not be hard.

Current status: Working on an alpha release. The current code is not yet recommended for
public consumption.

This project is Copyright (c) 2007-2009 Andrew Fischer.

The entire project is available to the public under the MIT licence. See the LICENSE
file for more information.
