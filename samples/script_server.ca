
import zmq

files_to_watch = [] -- input from C++ land

for file in @files_to_watch
    if not(file:exists(file))
        print('file not found: ' file)
        discard

state List watched_files = ['x.ca']
watched_files.extend(files_to_watch)

-- ZMQ request socket. This socket handles requests for full file copies (used by
-- new connections).
state responder = zmq:create_responder(2778)

incoming_req = responder.read()
if incoming_req != null
    responder.reply('here is your response')

-- ZMQ publish socket. This socket pushes out file changes.
state publisher = zmq:create_publisher(2779)

for file in watched_files
    if file:file_changed(file)
        print('file changed: ' file)
        publisher.send(concat('file changed: ' file))
