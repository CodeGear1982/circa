
type Point { float x, float y }

WINDOW_WIDTH = 500
WINDOW_HEIGHT = 400

-- draw the checkerboard in the background
checker_width = 30
checker_height = 30
for x in range((WINDOW_WIDTH / checker_width) + 1)
  for y in range((WINDOW_HEIGHT / checker_height) + 1)
    box_tl = [x:int * checker_width, y:int * checker_height] : Point
    box_br = box_tl + [checker_width, checker_height]
    box_tr = [box_br.x box_tl.y]
    box_bl = [box_tl.x box_br.y]
    color = if_expr((x:int+y:int) % 2 == 1, 0xeeeeeeff, 0xffffffff)
    gl_triangles([box_tl box_tr box_bl box_tr box_br box_bl] color)
  end
end

def rotate_points_around(List points, Point center, float rot) : List
    def rotate_point(Point point) : Point
        point = point - center
        point = [point.x*cos(rot) - point.y*sin(rot), point.x*sin(rot)+point.y*cos(rot)]
        point = point + center
        return point
    end
    return map(rotate_point, points)
end

def draw_piece(Point location, float rot)
    shape = [[0 0] [1 0] [0 1]]
    rotate_points_around(@shape, [.5 .5] rot)
    mult(@shape, 50)
    def add_location(Point p) : Point
      return p + location
    end
    map(add_location, @shape)
    gl_triangles(shape, 0)
end

draw_piece([200 200], time/8)
