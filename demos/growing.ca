
background(#000)

type SegmentInput {
  int generation
  number distance_from_base
  number distance_till_branch
  number end_radius
  Point loc
  number angle
  number bend_value
}

base_grow_rate = 200.0
max_segment_length = 10.0 -- 10 to 30
max_segment_radius = 1.0
max_segment_angle = 1.0 -- .5 - 1
max_segment_length = 10.0 -- 10 - 30
wiggle_factor = 0.07 -- 0 - 1
generation_limit = 21
distance_between_branches_min = 30.0 -- 20 - 100
distance_between_branches_var = 20.0 -- 20 - 100
branch_split_angle = .1

def segment(SegmentInput input)
    state number age = 0.0
    state wiggle_value = rand() - .5
    state thickness_ratio = 1.0

    generation = input.generation + 1

    age += td

    -- length
    target_length = base_grow_rate * age
    min(@target_length, max_segment_length)
    length = target_length * (1 - (1 / (age + 1)))

    -- thickness
    -- todo

    -- angle delta
    angle_delt = wiggle_value * wiggle_factor + input.bend_value
    mult(@angle_delt, (1 - 1 / (age + 1)))
    angle = input.angle + angle_delt

    min(@angle_delt, max_segment_angle)
    max(@angle_delt, -max_segment_angle)

    distance_from_base = input.distance_from_base + length
    distance_till_branch = input.distance_till_branch - target_length
    
    start_pos = input.loc
    end_pos = start_pos + polar(angle) * length
    line(start_pos end_pos #fff)

    -- check to branch
    if distance_till_branch < 0
        for i in 0..2
            distance_till_next_branch = distance_between_branches_min + seed() * distance_between_branches_var
            bend_angle = ((i * 2) - 1) * branch_split_angle
            segment([generation, distance_from_base, distance_till_next_branch, 0, end_pos, angle, bend_angle])

    -- or sprout a child
    elif (target_length >= max_segment_length and generation < generation_limit)
        segment([generation distance_from_base distance_till_branch 0 end_pos angle, 0])


root_pos = [300 300]
segment([0 0 50.0 0 root_pos 0 0])

def make_plants_with_mouse()
    state roots = []

    if mouse_clicked()
        roots.append(mouse)

    for root in roots
        Point(@root)
        segment([0 0 50.0 0 root 0 0])

make_plants_with_mouse()
