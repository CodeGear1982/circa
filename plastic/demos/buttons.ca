
background(#eef)

normal_color = #22d
highlight_color = #c3f
click_color = #f0f
text_color = #fff

def draggable_rect(Point initial_location, Point size) -> Point
    state Point location = initial_location
    rect = [location.x, location.y, location.x+size.x, location.y+size.y]
    state currently_dragging = false
    state Point mouse_offset = [0 0]
    if currently_dragging
        location = mouse + mouse_offset
        if not(mouse_pressed())
            currently_dragging = false
        end
    elif mouse_clicked(rect)
        currently_dragging = true
        mouse_offset = location - mouse
    end
    return location
end

def draggable_box(Point initial_location)
    size = [100 50] -> Point
    location = draggable_rect(initial_location, size)
    rect = [location.x location.y location.x+size.x location.y+size.y]

    color = normal_color
    highlight = cond(mouse_over(rect), 1.0, 0.0)
    highlight = approach(highlight, time_delta)
    color = color_blend(normal_color highlight_color highlight)

    fill_rect(rect color)
    
    text_sprite = text:render_text(ui_font_medium, "Draggable", text_color)
    text:draw_rendered_text(text_sprite, [location.x + (size.x - text_sprite.width)/2,
        location.y + (size.y - text_sprite.height) / 2])
end


for i in 0..10
draggable_box([100 40 + i*40])
end
